[{"/Users/viktor/PhpstormProjects/online-shop/.eslintrc.js":"1","/Users/viktor/PhpstormProjects/online-shop/nuxt.config.ts":"2","/Users/viktor/PhpstormProjects/online-shop/components/CartIcon.vue":"3","/Users/viktor/PhpstormProjects/online-shop/components/FilterSidebar.vue":"4","/Users/viktor/PhpstormProjects/online-shop/components/HeaderComponent.vue":"5","/Users/viktor/PhpstormProjects/online-shop/components/ProductItem.vue":"6","/Users/viktor/PhpstormProjects/online-shop/components/ProductsList.vue":"7","/Users/viktor/PhpstormProjects/online-shop/pages/index.vue":"8","/Users/viktor/PhpstormProjects/online-shop/pages/CatalogProducts.vue":"9","/Users/viktor/PhpstormProjects/online-shop/layouts/default.vue":"10","/Users/viktor/PhpstormProjects/online-shop/pages/products/[id].vue":"11","/Users/viktor/PhpstormProjects/online-shop/stores/index.js":"12","/Users/viktor/PhpstormProjects/online-shop/pages/CartPage.vue":"13","/Users/viktor/PhpstormProjects/online-shop/components/SliderComponent.vue":"14"},{"size":602,"mtime":1688994040130,"results":"15","hashOfConfig":"16"},{"size":253,"mtime":1689578966253,"results":"17","hashOfConfig":"16"},{"size":1088,"mtime":1689596244129,"results":"18","hashOfConfig":"16"},{"size":3710,"mtime":1689769792890,"results":"19","hashOfConfig":"16"},{"size":420,"mtime":1689248571746,"results":"20","hashOfConfig":"16"},{"size":1226,"mtime":1689591278790,"results":"21","hashOfConfig":"16"},{"size":1814,"mtime":1689767301406,"results":"22","hashOfConfig":"16"},{"size":358,"mtime":1689321732502,"results":"23","hashOfConfig":"16"},{"size":211,"mtime":1689687457596,"results":"24","hashOfConfig":"16"},{"size":1533,"mtime":1689257964052,"results":"25","hashOfConfig":"16"},{"size":1535,"mtime":1689254990159,"results":"26","hashOfConfig":"16"},{"size":4102,"mtime":1689766740289,"results":"27","hashOfConfig":"16"},{"size":1995,"mtime":1689594256938,"results":"28","hashOfConfig":"16"},{"size":1031,"mtime":1689769816124,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"m132bo",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/viktor/PhpstormProjects/online-shop/.eslintrc.js",[],[],[],"/Users/viktor/PhpstormProjects/online-shop/nuxt.config.ts",["84"],[],"// https://nuxt.com/docs/api/configuration/nuxt-config\nexport default defineNuxtConfig({\n  css: [\n    '@/assets/main.css'\n  ],\n  devtools: { enabled: true },\n  modules: [\n    '@nuxtjs/tailwindcss',\n    '@pinia/nuxt',\n    '@nuxtjs/eslint-module',\n  ],\n})",[],"/Users/viktor/PhpstormProjects/online-shop/components/CartIcon.vue",["85"],[],"<template>\n  <div class=\"cart-icon\" :class=\"{'has-products': countProducts > 0}\" :data-count=\"countProducts\">\n    <img src=\"../images/cart.svg\" alt=\"\">\n  </div>\n</template>\n\n<script setup>\nimport {ref, computed, onMounted} from \"vue\";\nimport {useProductStore} from \"../stores\";\n\nconst store = useProductStore();\n\nconst countProducts = computed(() => {\n  if (store.getCart) {\n    let count = 0;\n    store.getCart.forEach(product => {\n      count = count + product.count;\n    })\n\n    return count;\n  } else {\n    return 0;\n  }\n})\n\nconst getCartFromStorage = () => {\n  const cart = localStorage.getItem('cart');\n\n  if (cart === null) {\n    return [];\n  }\n\n  try {\n    return JSON.parse(cart);\n  } catch (e) {\n    localStorage.removeItem('cart')\n    return [];\n  }\n};\n\nonMounted( () => {\n  const cart = getCartFromStorage();\n  store.updateCart(cart);\n});\n</script>\n\n<style scoped>\n.cart-icon {\n  width: 24px;\n  height: 24px;\n  position: relative;\n}\n\n.cart-icon.has-products::after {\n  content: attr(data-count);\n  display: block;\n  position: absolute;\n  top: -15px;\n  right: -5px;\n}\n</style>\n",[],"/Users/viktor/PhpstormProjects/online-shop/components/FilterSidebar.vue",["86"],[],"<template>\n  <aside class=\"w-1/4 bg-gray-100 px-4 py-2 mr-5\">\n    <form @submit.prevent=\"onSubmit\" class=\"w-full\">\n      <div class=\"mb-4\">\n        <h2 class=\"text-lg font-semibold\">Категории</h2>\n        <ul>\n          <li>\n            <label for=\"category-all\">\n              <input id=\"category-all\" type=\"checkbox\" value=\"all\" v-model=\"selectedCategories\">\n              Все\n            </label>\n          </li>\n          <li v-for=\"(category, ind) in getCategories\" :key=\"ind\">\n            <label for=\"category-electronics\">\n              <input id=\"category-electronics\" type=\"checkbox\" :value=\"category\" v-model=\"selectedCategories\">\n              {{ categoriesMap.get(category) }}\n            </label>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <h2 class=\"text-lg font-semibold mb-4\">Цены</h2>\n        <SliderComponent :options=\"options\" v-model=\"valueRange\"></SliderComponent>\n        <div class=\"filters-price__inputs w-full flex justify-between mt-4\">\n          <label class=\"filters-price__label p-2 flex\">\n            <span class=\"filters-price__text\">от</span>\n            <input type=\"text\" min=\"0\" max=\"9999\" v-model=\"valueRange[0]\" placeholder=\"50\" class=\"filters-price__input w-full\">\n            <span class=\"filters-price__text\">$</span>\n          </label>\n          <label class=\"filters-price__label p-2 flex\">\n            <span class=\"filters-price__text\">до</span>\n            <input type=\"text\" min=\"0\" max=\"9999\" placeholder=\"150\" v-model=\"valueRange[1]\" class=\"filters-price__input w-full\">\n            <span class=\"filters-price__text\">$</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"filed-btn mt-4\">\n        <button type=\"submit\" class=\"p-2 text-center w-full bg-slate-200 rounded hover:bg-opacity-50\">Поиск</button>\n      </div>\n    </form>\n  </aside>\n</template>\n\n<script setup>\nimport {useProductStore} from \"../stores\";\nimport {onMounted, computed, ref} from \"vue\";\n\nconst store = useProductStore();\nconst categoriesMap = new Map([\n  [\"all\", 'Все'],\n  [\"electronics\", 'Электороника'],\n  [\"jewelery\", 'Ювелирные изделия'],\n  [\"men's clothing\", 'Мужская одежда'],\n  [\"women's clothing\", 'Женская одежда'],\n]);\n\nconst selectedCategories = ref([\"all\"]);\nconst valueRange = ref([]);\n\nconst getCategories = computed(() => {\n  return store.getCategories;\n});\n\nconst onSubmit = async () => {\n  const filteredProducts = store.getProducts.filter((product) => {\n    if (selectedCategories.value.includes(\"all\")) {\n      return true;\n    } else {\n      return selectedCategories.value.includes(product.category);\n    }\n  });\n\n  const filteredProductsByPrice = filteredProducts.filter((product) => {\n     return product.price >= valueRange.value[0] && product.price <= valueRange.value[1];\n  });\n\n  await store.updateFilteredProducts(filteredProductsByPrice);\n};\n\nawait store.fetchProducts();\nawait store.fetchCategories();\n\nconst options = computed(() => {\n  const products = store.getProducts;\n  if (products.length != 0) {\n    const prices = store.getProducts.map(({price}) => price);\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n\n    return {\n      start: [minPrice, maxPrice],\n      connect: true,\n      range: {\n        min: minPrice,\n        max: maxPrice\n      }\n    };\n  }\n});\n\nonMounted(async () => {\n  await onSubmit();\n});\n</script>\n\n<style>\n.filters-price__label {\n  border: 1px solid #D9D9D9;\n  border-radius: 6px;\n}\n\n.filters-price__label + .filters-price__label {\n  margin-left: 10px;\n}\n\n.filters-price__text {\n  margin-right: 5px;\n}\n\n.filters-price__input {\n  background: none;\n  outline: none;\n}\n</style>\n","/Users/viktor/PhpstormProjects/online-shop/components/HeaderComponent.vue",[],[],"/Users/viktor/PhpstormProjects/online-shop/components/ProductItem.vue",[],[],"/Users/viktor/PhpstormProjects/online-shop/components/ProductsList.vue",["87"],[],"<template>\n  <div class=\"py-4\" ref=\"scrollComponent\">\n    <h2 class=\"text-xl font-bold\">\n      Список товаров\n    </h2>\n    <div v-if=\"props.isFilter\" class=\"grid gap-4 mt-4 grid-template-repeat\">\n      <ProductItem v-for=\"product in getFilteredProducts\" :key=\"product.id\" :product=\"product\"/>\n    </div>\n    <div v-else class=\"grid gap-4 mt-4 grid-template-repeat\">\n      <ProductItem v-for=\"product in getProducts\" :key=\"product.id\" :product=\"product\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useProductStore } from \"../stores\";\nimport {computed, onMounted, onUnmounted, ref} from \"vue\";\n\nconst props = defineProps({\n  isFilter: {\n    type: Boolean,\n    required: false\n  }\n});\nlet isLoading = ref(false);\nconst scrollComponent = ref(null);\nconst step = 5;\nconst store = useProductStore();\nawait store.fetchProductLimit(step);\n\nconst getProducts = computed(() => {\n  return store.getProductsLimit;\n});\n\nconst loadMoreProducts = async () => {\n  if (isLoading.value) {\n    return;\n  }\n  isLoading.value = true;\n  const currentLimit = store.getProductsLimit.length;\n  const newLimit = currentLimit + step;\n  try {\n    await store.fetchProductLimit(newLimit);\n    isLoading.value = false;\n  } catch (e) {\n    console.log(e);\n    isLoading.value = false;\n  }\n};\n\nconst getFilteredProducts = computed(() => {\n  return store.getFilteredProducts;\n});\n\nconst handleScroll = (e) => {\n  let element = scrollComponent.value;\n  if (element.getBoundingClientRect().bottom < window.innerHeight) {\n    loadMoreProducts();\n  }\n};\n\nonMounted(() => {\n  window.addEventListener(\"scroll\", handleScroll);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", handleScroll);\n});\n</script>\n\n<style>\n.grid-template-repeat {\n  grid-template-columns: repeat(auto-fit,minmax(230px, 1fr));\n}\n</style>","/Users/viktor/PhpstormProjects/online-shop/pages/index.vue",["88"],[],"<template>\n  <div class=\"container\">\n    <div class=\"w-full\">\n      <ProductsList />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {useProductStore} from \"../stores\";\nimport {onMounted} from \"vue\";\n\nconst store = useProductStore();\n\nonMounted( () => {\n  const cart = JSON.parse(localStorage.getItem('cart'));\n  store.updateCart(cart);\n});\n</script>\n","/Users/viktor/PhpstormProjects/online-shop/pages/CatalogProducts.vue",[],[],"/Users/viktor/PhpstormProjects/online-shop/layouts/default.vue",["89"],[],"<template>\n  <div class=\"wrapper\">\n    <header class=\"header bg-[#213343] p-4\">\n      <div class=\"container\">\n        <div class=\"header__row\">\n          <nav class=\"header__menu flex justify-between\">\n            <div class=\"header__logo\">\n              <NuxtLink to=\"/\" class=\"text-2xl\">\n                Online Shop\n              </NuxtLink>\n            </div>\n            <ul class=\"flex\">\n              <li class=\"header__menu-link\"><NuxtLink to=\"/catalogProducts\">Каталог</NuxtLink></li>\n              <li class=\"header__menu-link header__link-cart\"><NuxtLink class=\"cart-link\" to=\"/cartPage\">Корзина</NuxtLink><CartIcon/></li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n    <main class=\"main p-4\">\n      <slot/>\n    </main>\n    <footer class=\"footer bg-[#213343] p-4\">\n      <div class=\"container\">\n        <div class=\"text-blue text-center\">\n          Copyright © 2023 HubSpot, Inc.\n        </div>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script setup>\n</script>\n\n<style scoped>\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n\n.main {\n  display: flex;\n  flex: 1 1 auto;\n}\n\n.footer {\n  width: 100%;\n}\n\n.container {\n  max-width: 1120px;\n  margin: 0 auto;\n}\n\n.main {\n  color: #2e475d;\n}\n\n.header__menu-link {\n  cursor: pointer;\n}\n\n.header__menu-link + .header__menu-link {\n  margin-left: 20px;\n}\n\n.cart-link {\n  margin-right: 4px;\n}\n\n.header__link-cart {\n  display: flex;\n}\n\n.router-link-exact-active {\n  color: #69dae8;\n}\n</style>","/Users/viktor/PhpstormProjects/online-shop/pages/products/[id].vue",["90","91","92"],[],"<template>\n  <div class=\"container\">\n    <div class=\"flex justify-between shadow px-4 py-8 mt-6\">\n      <div class=\"product__img-big-wrapper w-3/5\">\n        <img class=\"product__big-img\" :src=\"`${getCurrentProduct.image}`\" alt=\"\">\n      </div>\n      <div class=\"product__info w-2/5\">\n        <h2 class=\"product__title text-3xl mb-6\">{{ getCurrentProduct.title }}</h2>\n        <div class=\"product__price mb-6 text-xl\">\n          Цена - {{ getCurrentProduct.price }} $\n        </div>\n        <h3 class=\"text-2xl border-b mb-4\">Описание продукта</h3>\n        <div class=\"product__description mb-6\">\n          {{ getCurrentProduct.description }}\n        </div>\n        <div class=\"product__btn-wrapper\">\n          <button @click=\"addProductToCart(getCurrentProduct)\" class=\"border-r-6 bg-slate-200 rounded p-2 w-full hover:bg-opacity-50\">В корзину</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {ref, onMounted, computed} from \"vue\";\nimport { useProductStore } from \"../../stores\";\n\nconst store = useProductStore();\n\nconst getCurrentProduct = computed(() => {\n  return store.getCurrentProduct;\n})\n\nconst addProductToCart = (product) => {\n  store.addToCart(product);\n};\n\nonMounted(async () => {\n  const {id} = useRoute().params;\n  await store.fetchCurrentProduct(id);\n});\n</script>\n\n<style scoped>\n.product__img-big-wrapper {\n  max-height: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.product__big-img {\n  max-height: 100%;\n}\n</style>","/Users/viktor/PhpstormProjects/online-shop/stores/index.js",["93"],[],"import { defineStore } from 'pinia'\n\nexport const useProductStore = defineStore('product', {\n    state: () => {\n        return {\n            products: [],\n            cart: [],\n            currentProduct: {},\n            categories: [],\n            filteredProducts: [],\n            productsLimit: [],\n        }\n    },\n    actions: {\n        updateCart(cart) {\n            if (process.client) {\n                this.cart = cart;\n            }\n        },\n        updateFilteredProducts(products) {\n            this.filteredProducts = products;\n        },\n        addToCart(item) {\n            if (this.cart == null) {\n                this.cart = [];\n            }\n            if (this.cart.length === 0) {\n                item.count = 1;\n                this.cart.push(item);\n                localStorage.setItem('cart', JSON.stringify(this.cart));\n                console.log(JSON.parse(localStorage.getItem('cart')));\n                return;\n            }\n\n            const product = this.cart.find((product) => {\n                if (product.id == item.id) {\n                    product.count++;\n                    return product;\n                }\n            })\n\n            if (!product) {\n                item.count = 1;\n                this.cart.push(item);\n            }\n\n            localStorage.setItem('cart', JSON.stringify(this.cart));\n            console.log(JSON.parse(localStorage.getItem('cart')));\n        },\n        minesFromCart(item) {\n            this.cart.forEach(product => {\n                if (item.id == product.id) {\n                    product.count--;\n                }\n            });\n            localStorage.setItem('cart', JSON.stringify(this.cart));\n        },\n        removeFromCart(item) {\n            this.cart = this.cart.filter((product) => product.id !== item.id)\n            localStorage.setItem('cart', JSON.stringify(this.cart));\n        },\n        async fetchProducts() {\n            try {\n                const response = await fetch('https://fakestoreapi.com/products');\n                const data = await response.json();\n\n                this.products = data;\n            } catch (e) {\n                console.error(e);\n            }\n        },\n        async fetchProductLimit(limit) {\n            try {\n                const response = await fetch(`https://fakestoreapi.com/products?limit=${limit}`);\n                const data = await response.json();\n\n                this.productsLimit = data;\n            } catch (e) {\n                console.log(e);\n            }\n        },\n        async fetchCurrentProduct(id) {\n            try {\n                const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n                const product = await response.json();\n\n                this.currentProduct = product;\n            } catch (e) {\n                console.log(e);\n            }\n        },\n        async fetchCategories() {\n            try {\n                const response = await fetch('https://fakestoreapi.com/products/categories');\n                const categories = await response.json();\n                console.log('categories');\n                this.categories = categories;\n            } catch (e) {\n                console.log(e);\n            }\n        },\n        getCartFromStorage() {\n            const cart = localStorage.getItem('cart');\n\n            if (cart === null) {\n                return [];\n            }\n\n            try {\n                return JSON.parse(cart);\n            } catch (e) {\n                localStorage.removeItem('cart')\n                return [];\n            }\n        },\n    },\n    getters: {\n        getProducts(state) {\n            return state.products;\n        },\n        getCart(state) {\n            return state.cart;\n        },\n        getCurrentProduct(state) {\n            return state.currentProduct;\n        },\n        getCategories(state) {\n            return state.categories;\n        },\n        getFilteredProducts(state) {\n            return state.filteredProducts;\n        },\n        getProductsLimit(state) {\n            return state.productsLimit;\n        },\n    },\n})","/Users/viktor/PhpstormProjects/online-shop/pages/CartPage.vue",["94"],[],"<template>\n  <div class=\"container\">\n    <div class=\"cart-wrapper\">\n      <div v-for=\"cart in getCart\" :key=\"cart.id\" class=\"cart-item flex justify-between py-4\">\n        <div class=\"cart-item__img w-1/4\">\n          <img :src=\"cart.image\" alt=\"\">\n        </div>\n        <div class=\"cart-item__info w-2/4 flex-col justify-between flex\">\n          <div>\n            <div class=\"cart-item__title mb-2\">{{cart.title}}</div>\n            <div class=\"cart-item__category\">\n              Категория: {{ cart.category }}\n            </div>\n          </div>\n          <div>\n            <button @click=\"removeProduct(cart)\" class=\"p-2\">Удалить</button>\n          </div>\n        </div>\n        <div class=\"cart-item__action flex flex-col justify-between w-1/4\">\n          <div class=\"cart-item__price text-xl\">\n            {{ cart.price }}$\n          </div>\n          <div class=\"cart-item__count flex justify-between\">\n            <div @click=\"minesProduct(cart)\" class=\"text-2xl cursor-pointer\" :class=\"{'text-gray-300': cart.count == 1}\">-</div>\n            <div class=\"text-2xl\">{{ cart.count }}</div>\n            <div @click=\"addProduct(cart)\" class=\"text-2xl cursor-pointer\">+</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {useProductStore} from \"../stores\";\nimport {computed, onMounted} from \"vue\";\n\nconst store = useProductStore();\n\nconst getCart = computed(() => {\n  return store.getCart;\n});\n\nconst addProduct = (product) => {\n  store.addToCart(product);\n};\n\nconst minesProduct = (product) => {\n  if (product.count > 1) {\n    store.minesFromCart(product);\n  }\n};\n\nconst removeProduct = (product) => {\n  store.removeFromCart(product);\n};\n</script>\n\n<style scoped>\n.cart-item__img {\n  height: 156px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.cart-item__img img {\n  object-fit: cover;\n  max-height: 100%;\n  max-width: 100%;\n}\n\n.cart-item + .cart-item {\n  border-top: 1px solid #2e475d;\n}\n</style>","/Users/viktor/PhpstormProjects/online-shop/components/SliderComponent.vue",[],[],{"ruleId":"95","severity":2,"message":"96","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":32},{"ruleId":"99","severity":2,"message":"100","line":8,"column":9,"nodeType":"97","messageId":"101","endLine":8,"endColumn":12},{"ruleId":"102","severity":2,"message":"103","line":83,"column":26,"nodeType":"104","endLine":99,"endColumn":2},{"ruleId":"99","severity":2,"message":"105","line":55,"column":23,"nodeType":"97","messageId":"101","endLine":55,"endColumn":24},{"ruleId":"106","severity":2,"message":"107","line":1,"column":1,"nodeType":null,"messageId":"108"},{"ruleId":"106","severity":2,"message":"109","line":1,"column":1,"nodeType":null,"messageId":"108"},{"ruleId":"106","severity":2,"message":"110","line":1,"column":1,"nodeType":null,"messageId":"108"},{"ruleId":"99","severity":2,"message":"100","line":25,"column":9,"nodeType":"97","messageId":"101","endLine":25,"endColumn":12},{"ruleId":"95","severity":2,"message":"111","line":39,"column":16,"nodeType":"97","messageId":"98","endLine":39,"endColumn":24},{"ruleId":"95","severity":2,"message":"112","line":16,"column":17,"nodeType":"97","messageId":"98","endLine":16,"endColumn":24},{"ruleId":"99","severity":2,"message":"113","line":36,"column":19,"nodeType":"97","messageId":"101","endLine":36,"endColumn":28},"no-undef","'defineNuxtConfig' is not defined.","Identifier","undef","no-unused-vars","'ref' is defined but never used.","unusedVar","vue/return-in-computed-property","Expected to return a value in computed function.","ArrowFunctionExpression","'e' is defined but never used.","vue/multi-word-component-names","Component name \"index\" should always be multi-word.","unexpected","Component name \"default\" should always be multi-word.","Component name \"[id]\" should always be multi-word.","'useRoute' is not defined.","'process' is not defined.","'onMounted' is defined but never used."]